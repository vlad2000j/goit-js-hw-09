{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAGtC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAXbL,EAAOa,iBAAiB,UAgBxB,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAaC,OAAOjB,EAAOK,MAAMa,OACrC,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAAOoB,OAAOF,MAAOC,IACxChB,EAAcgB,EAAGH,GAChBK,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAwB,OAAOC,QAAQ,uBAAqBnB,QAAiBC,MAAU,IAEhEmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAwB,OAAOG,QAAQ,sBAAoBrB,QAAeC,MAAU,IAE9DW,GAAYC,OAAOjB,EAAO0B,KAAKR,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmitForm);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(()=> {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n  })\n  \n}\n\nfunction onSubmitForm(e){\n  e.preventDefault();\n  let timerDelay = Number(formEl.delay.value);\n  for (let i = 1; i <= formEl.amount.value; i++) {\n    createPromise(i, timerDelay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    timerDelay+=Number(formEl.step.value);\n  }\n}\n\n////"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","timerDelay","Number","value","i","amount","then","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.40ac72a9.js.map"}